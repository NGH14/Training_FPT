@using FPT.ViewModels.Common;
@model PagedResult<FPT.ViewModels.Catalog.Products.ProductVm>

@{
    ViewData["Title"] = "Product List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);
    </script>
}
<div class="container-fluid">
    <h1 class="mt-4">Product List</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a href="/">Homepage</a></li>
        <li class="breadcrumb-item active">Product Lít</li>
    </ol>
    <div class="card mb-12">
        <div class="card-header">
            <div class="row">
                <div class="col-md-6 col-xs-12">
                    <a class="btn btn-success" asp-action="Create" asp-controller="Product">Create New Product</a>
                </div>
                <div class="col-md-6 col-xs-12">
                    <form asp-action="Index" method="get">
                        <div class="row">
                            <div class="col-md-4">
                                <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                            </div>
                            <div class="col-md-4">
                                <select name="categoryId" onchange="this.form.submit()" asp-items="@ViewBag.Categories" class="form-control">
                                    <option>--Category</option>
                                </select>
                            </div>
                            <div class="cold-md-3">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <button type="button" onclick="window.location.href='/Product/Index'" class="btn btn-dark">Reset</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>
                                Course ID
                            </th>
                            <th>
                               Name
                            </th>
                            <th></th>
                        </tr>
                    </thead>
					<tbody>
						<tr>
							<td>
								1
							</td>
							<td>
								Focus on objectives
							</td>
							<td style="color: #007bff">
								Edit |
								Details |
								Delete |
								Category Assign
							</td>
						</tr>

						<tr>
							<td>
								2
							</td>
							<td>
								Tutorial: Create a web API with ASP.NET Core
							</td>
							<td style="color: #007bff">
								Edit |
								Details |
								Delete |
								Category Assign
							</td>
						</tr>


						<tr>
							<td>
								3
							</td>
							<td>
								Code less, engineer more
							</td>
							<td style="color: #007bff">
								Edit |
								Details |
								Delete |
								Category Assign
							</td>
						</tr>


						@foreach (var item in Model.Items)
						{
					<tr>
						<td>
							@Html.DisplayFor(modelItem => item.Id)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Name)
						</td>
						<td>
							@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
							@Html.ActionLink("Details", "Details", new { id = item.Id }) |
							@Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
							@Html.ActionLink("CategoryAssign", "CategoryAssign", new { id = item.Id }) |
						</td>
					</tr>}
					</tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>